Integration tests
=================

Set up a test browser and log in as a manager::

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> portal_url = 'http://nohost/plone'
    >>> self.app.acl_users.userFolderAddUser('root', 'secret', ['Manager'], [])
    >>> browser.addHeader('Authorization', 'Basic root:secret')

Standalone form
---------------

Add a new Form Folder::

    >>> browser.open(portal_url)
    >>> browser.getLink('Form Folder').click()
    >>> browser.getControl('Title').value = 'testform'
    >>> browser.getControl('Save').click()
    
And confirm that it renders properly::
    
    >>> browser.url
    'http://nohost/plone/testform/view'
    >>> print browser.contents
    <BLANKLINE>
    ...
    <h1 class="documentFirstHeading">testform</h1>
     <div class="pfg-form formid-testform">
      <form name="edit_form" method="post"
            enctype="multipart/form-data"
            class="enableUnloadProtection enableAutoFocus"
            action="http://nohost/plone/testform"
            id="fg-base-edit">
        <div class="field ArchetypesStringWidget "
             id="archetypes-fieldname-replyto">
          <span></span>
          <label class="formQuestion" for="replyto">Your E-Mail Address</label>
          <span class="fieldRequired" title="Required">
            (Required)
          </span>
          <div class="formHelp" id="replyto_help"></div>
          <div class="fieldErrorBox"></div>
          <input type="text" name="replyto"
                 class="blurrable firstToFocus" id="replyto"
                 size="30" maxlength="255" />
        </div>
        <div class="field ArchetypesStringWidget "
             id="archetypes-fieldname-topic">
          <span></span>
          <label class="formQuestion" for="topic">Subject</label>
          <span class="fieldRequired" title="Required">
            (Required)
          </span>
          <div class="formHelp" id="topic_help"></div>
          <div class="fieldErrorBox"></div>
          <input type="text" name="topic"
                 class="blurrable firstToFocus" id="topic"
                 size="30" maxlength="255" />
        </div>
        <div class="field ArchetypesTextAreaWidget "
             id="archetypes-fieldname-comments">
          <span></span>
          <label class="formQuestion" for="comments">Comments</label>
          <span class="fieldRequired" title="Required">
            (Required)
          </span>
          <div class="formHelp" id="comments_help"></div>
          <div class="fieldErrorBox"></div>
        <textarea class="blurrable firstToFocus" rows="5"
                  name="comments" cols="40" id="comments"></textarea>
        </div>
          <div class="formControls">
            <input type="hidden" name="fieldset"
                   value="default" />
            <input type="hidden" name="form.submitted"
                   value="1" />
            <input type="hidden" name="add_reference.field:record" value="" />
            <input type="hidden" name="add_reference.type:record" value="" />
            <input type="hidden" name="add_reference.destination:record" value="" />
            <input type="hidden" name="last_referer"
                   value="localhost" />
                <input class="context" type="submit"
                       name="form_submit" value="Submit" />
          </div>
      </form>
    </div>
    ...

Submit the form.  An incomplete submission should give validation errors::

    >>> self.portal.testform.mailer.setRecipient_email('mdummy@address.com')
    >>> browser.getControl('Your E-Mail Address').value = 'test@example.com'
    >>> browser.getControl('Subject').value = 'test'
    >>> browser.getControl('Submit').click()
    >>> browser.url
    'http://nohost/plone/testform'
    >>> 'Please correct the indicated errors.' in browser.contents
    True

Now let's try a complete submission and confirm that it displays the default
thank you page.  The default form has a mailer, so we'll programmatically set
a recipient so that it doesn't complain.  (The mailer is mocked in the doctest
base class)::

    >>> self.portal.testform.mailer.setRecipient_email('mdummy@address.com')
    >>> browser.getControl('Comments').value = 'PFG rocks!'
    >>> browser.getControl('Submit').click()
    <sent mail from  to ['mdummy@address.com']>
    >>> browser.url
    'http://nohost/plone/testform'
    >>> 'Thanks for your input.' in browser.contents
    True


Embedded form
-------------

Now let's make sure PloneFormGen forms work properly when embedded in some other
context.  First let's load some test-only ZCML which registers a @@form-wrapper
view that will render the form we created above.  (Due to running in an incomplete
test environment we also need to apply a monkey-patch from plone.app.linkintegrity
which enhances the standard Zope error handler's treatment of Retry errors.) ::

    >>> from Products.Five import zcml
    >>> import Products.PloneFormGen
    >>> zcml.load_config('tests/fixtures/tests.zcml', Products.PloneFormGen)
    >>> from plone.app.linkintegrity.monkey import installExceptionHook
    >>> installExceptionHook()

Now we should be able to render the same form as above, but located at @@form-wrapper::

    >>> browser.handleErrors = False
    >>> browser.open(portal_url + '/@@form-wrapper')
    >>> print browser.contents
    <!DOCTYPE...
    <div class="pfg-embedded">
        <dl class="portalMessage info" id="kssPortalMessage" style="display:none">
            <dt>Info</dt>
            <dd></dd>
        </dl>
            <div class="pfg-form formid-testform">
          <form name="edit_form" method="post"
                enctype="multipart/form-data"
                class="enableUnloadProtection enableAutoFocus"
                action="http://nohost/plone/@@form-wrapper"
                id="fg-base-edit">
            <div class="field ArchetypesStringWidget "
                 id="archetypes-fieldname-replyto">
              <span></span>
              <label class="formQuestion" for="replyto">Your E-Mail Address</label>
              <span class="fieldRequired" title="Required">
                (Required)
              </span>
              <div class="formHelp" id="replyto_help"></div>
              <div class="fieldErrorBox"></div>
              <input type="text" name="replyto"
                     class="blurrable firstToFocus" id="replyto"
                     size="30" maxlength="255" />
            </div>
            <div class="field ArchetypesStringWidget "
                 id="archetypes-fieldname-topic">
              <span></span>
              <label class="formQuestion" for="topic">Subject</label>
              <span class="fieldRequired" title="Required">
                (Required)
              </span>
              <div class="formHelp" id="topic_help"></div>
              <div class="fieldErrorBox"></div>
              <input type="text" name="topic"
                     class="blurrable firstToFocus" id="topic"
                     size="30" maxlength="255" />
            </div>
            <div class="field ArchetypesTextAreaWidget "
                 id="archetypes-fieldname-comments">
              <span></span>
              <label class="formQuestion" for="comments">Comments</label>
              <span class="fieldRequired" title="Required">
                (Required)
              </span>
              <div class="formHelp" id="comments_help"></div>
              <div class="fieldErrorBox"></div>
            <textarea class="blurrable firstToFocus" rows="5"
                      name="comments" cols="40" id="comments"></textarea>
            </div>
              <div class="formControls">
                <input type="hidden" name="fieldset"
                       value="default" />
                <input type="hidden"
                       name="testform.form.submitted" value="1" />
                <input type="hidden" name="add_reference.field:record" value="" />
                <input type="hidden" name="add_reference.type:record" value="" />
                <input type="hidden" name="add_reference.destination:record" value="" />
                <input type="hidden" name="last_referer"
                       value="localhost" />
                    <input class="context" type="submit"
                           name="form_submit" value="Submit" />
              </div>
          </form>
        </div>
    </div>
    ...

If we submit an incomplete form, it should get validated in-place and render with error
messages::

    >>> browser.getControl('Submit').click()
    >>> browser.url
    'http://nohost/plone/@@form-wrapper'
    >>> 'This field is required.' in browser.contents
    True

If we successfully complete the form, we should get pseudo-redirected to the thank you page::

    >>> browser.getControl('Your E-Mail Address').value = 'test@example.com'
    >>> browser.getControl('Subject').value = 'test'
    >>> browser.getControl('Comments').value = 'Now with double the rockage...'
    >>> browser.getControl('Submit').click()
    <sent mail from  to ['mdummy@address.com']>
    >>> browser.url
    'http://nohost/plone/@@form-wrapper'
    >>> 'Thanks for your input.' in browser.contents
    True

Make sure that the thank you page was rendered standalone, rather than embedded in the
wrapping template::

    >>> 'Embedded form' in browser.contents
    False

We used some trickery to retry the request with a new URL without doing a real redirect,
in order to preserve the request variables.  So let's make sure they made it::
    
    >>> 'Now with double the rockage' in browser.contents
    True
