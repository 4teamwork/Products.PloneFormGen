<tal:block metal:define-macro="master"
           define="plone_view here/@@plone;
                   foo plone_view/globalize;
                   errors nocall: view/errors;
                   fieldsets python:['default'];
                   default_fieldset string:default;
                   fieldset default_fieldset;
                   form python:view.form;
                   field python:view.context;
                   fieldid field/getId;
                   value nocall: view/value;
                   mode view/mode;
                   isATField python:view.isATField;
                   context python:form;">

  <tal:comment replace="nothing"> Field's view content </tal:comment>
  <div class="fgfield-view-wrapper">
    <tal:atfield condition = "isATField" define = "field python:field.fgField">
      <tal:block tal:condition="python: field.widget.macro != 'widget_richlabel'">

        <tal:comment replace="nothing"> In view mode: render with a value </tal:comment>
        <div tal:attributes="id string:archetypes-fieldname-${field/getName}" class="field"
             tal:condition="python: mode=='view'">
            <label class="formQuestion"><span tal:content="python:getattr(form,field.getName()).Title()">Field</span>:</label>
            <metal:fieldMacro use-macro="python:context.widget(field.getName(), mode=mode, field=field, accessor = value)" />
        </div>

        <tal:comment replace="nothing"> In edit mode: render as an input </tal:comment>
        <tal:editmode condition="python: mode=='edit'">
            <metal:fieldMacro use-macro="python:context.widget(field.getName(), mode=mode, field=field)" />
        </tal:editmode>
      </tal:block>
      <div tal:condition="python:field.widget.macro=='widget_richlabel'"
           tal:attributes="id string:archetypes-fieldname-${field/getName}"
         class="field PFG-RichLabel"
         tal:content="structure python:request.form.get(field.getName(), field.default)">
          Rich Label
      </div>
    </tal:atfield>
  </div>

  <tal:comment replace="nothing"> Field's edit content: For manipulate field object. 
                               Use in form build mode 
  </tal:comment>
  <tal:fieldedit condition="python: view.rendermode == 'edit'">
    <div class="fgfield-editbuttons" style="display:none">
      <a href="#" 
         class="fgfield-editbutton fgfield-editbutton-edit" 
         onClick="javascript: return false">
        <img src="edit.gif"/>
      </a>
      <a href="#" 
         class="fgfield-editbutton fgfield-editbutton-copy" 
         onClick="javascript: return false">
        <img src="add_icon.gif"/>
      </a>
      <a href="#" 
         class="fgfield-editbutton fgfield-editbutton-delete" 
         onClick="javascript: return false">
        <img src="delete_icon.gif"/>
      </a>
    </div>
      
    <div class="fgfield-edit-wrapper" 
         style="display:none" >
      <tal:editform replace="structure view/editview"/>
      <tal:controls replace="nothing">Add control button here (or use modified form button ?)</tal:controls>
    </div>
  </tal:fieldedit>
</tal:block>
